<?xml version="1.0"?>
<!--
  ~ Copyright (C) 2010 RafaÅ‚ Szemraj.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<console:ConsoleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
                       xmlns:mx="library://ns.adobe.com/flex/mx"
                       title="Actions" width="700" height="300" resizable="true"
                       xmlns:base="org.puremvc.as3.multicore.utilities.fabrication.console.view.components.base.*"
                       xmlns:console="org.puremvc.as3.multicore.utilities.fabrication.console.view.components.console.*">

    <s:VGroup width="100%" height="100%" paddingLeft="5" paddingTop="5" paddingRight="5" paddingBottom="5">
        <s:HGroup>
            <mx:ComboBox change="eventHandler( event )" id="filter" useHandCursor="true" buttonMode="true" rowCount="9">
                <mx:dataProvider>

                    <fx:Array>
                        <fx:String>All</fx:String>
                        <fx:String>{ActionType.FABRICATION_START}</fx:String>
                        <fx:String>{ActionType.COMMAND_REGISTERED}</fx:String>
                        <fx:String>{ActionType.INTERCEPTOR_REGISTERED}</fx:String>
                        <fx:String>{ActionType.PROXY_REGISTERD}</fx:String>
                        <fx:String>{ActionType.MEDIATOR_REGISTERED}</fx:String>
                        <fx:String>{ActionType.NOTIFICATION_SENT}</fx:String>
                        <fx:String>{ActionType.NOTIFICATION_ROUTE}</fx:String>
                        <!--<fx:String>{ActionType.SERVICE_CALL}</fx:String>-->
                    </fx:Array>
                </mx:dataProvider>
            </mx:ComboBox>
            <mx:Button label="clear" click="{actionsDataProvider = new ArrayCollection(); filter.selectedIndex = 0}"
                       id="clear" useHandCursor="true"
                       buttonMode="true" enabled="{actionsDataProvider.length > 0}"/>
            <base:MyCheckBox label="always in front" selected="false" id="afSwitch"/>
        </s:HGroup>
        <mx:DataGrid dataProvider="{actionsDataProvider}" headerStyleName="pixelBold" width="100%"
                     height="100%"
                     id="flowDataGrid" styleName="pixel" rowHeight="18" sortableColumns="false" draggableColumns="false"
                     resizableColumns="false">
            <mx:columns>
                <!--<mx:DataGridColumn headerText="#" width="25" dataField="index" minWidth="20"-->
                                   <!--itemRenderer="{new ClassFactory( DGItemRenderer )}"/>-->
                <mx:DataGridColumn headerText="message" dataField="message"
                                   itemRenderer="{new ClassFactory( HTMLLabel )}"/>
                <mx:DataGridColumn headerText="info" width="35"
                                   itemRenderer="{new ClassFactory( ImageLinkRenderer)}"/>
            </mx:columns>

        </mx:DataGrid>
    </s:VGroup>


    <fx:Script><![CDATA[
        import mx.collections.ArrayCollection;
        import mx.controls.CheckBox;

        import org.puremvc.as3.multicore.utilities.fabrication.logging.action.ActionType;
        import org.puremvc.as3.multicore.utilities.fabrication.console.view.components.base.HTMLLabel;
        import org.puremvc.as3.multicore.utilities.fabrication.console.view.components.base.ImageLinkRenderer;
        import org.puremvc.as3.multicore.utilities.fabrication.console.view.components.base.inspectdatagrid.itemrenderers.DGItemRenderer;
        import org.puremvc.as3.multicore.utilities.fabrication.logging.action.Action;

        [Bindable]
        public var actionsDataProvider:ArrayCollection = new ArrayCollection();


        private function eventHandler(event:Event):void
        {

            var ac:ArrayCollection = actionsDataProvider;
            ac.filterFunction = filterContent;
            ac.refresh();

        }

        private function filterContent(item:Action):Boolean
        {


            return ( item.type == "" + filter.selectedItem ) || filter.selectedIndex == 0;

        }

        override public function get alwaysInFrontOfSwitch():CheckBox
        {
            return afSwitch;
        }


        ]]></fx:Script>
</console:ConsoleWindow>
