<?xml version="1.0"?>
<!--
  ~ Copyright (C) 2010 RafaÅ‚ Szemraj.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<Group xmlns="library://ns.adobe.com/flex/spark"
       implements="mx.controls.listClasses.IDropInListItemRenderer, mx.controls.listClasses.IListItemRenderer"
       xmlns:mx="library://ns.adobe.com/flex/mx"
       xmlns:fx="http://ns.adobe.com/mxml/2009" buttonMode="true" useHandCursor="true" mouseChildren="false"
       width="100%">
    <mx:Image id="image" horizontalCenter="0" verticalCenter="0" height="16" width="16"/>
    <fx:Script><![CDATA[
        import mx.controls.listClasses.BaseListData;

        import org.puremvc.as3.multicore.utilities.fabrication.console.utils.Icons;
        import org.puremvc.as3.multicore.utilities.fabrication.logging.action.Action;
        import org.puremvc.as3.multicore.utilities.fabrication.logging.action.ActionType;

        private var _action:Action;

        public function get data():Object
        {
            return _action;
        }

        public function set data(value:Object):void
        {
            _action = value as Action;
            if (_action.infoObject) {

                image.source = resolveIcon(_action);
                image.visible = true;
            }
            else {
                image.source = null;
                image.visible = false;
            }


        }

        private function resolveIcon(actionObject:Action):Class
        {
            switch (actionObject.type) {

                case ActionType.FABRICATION_START : iconClass = Icons.redInfoIconSmall; break;
                case ActionType.MEDIATOR_REGISTERED : iconClass = Icons.blueInfoIconSmall; break;
                case ActionType.PROXY_REGISTERED : iconClass = Icons.yellowInfoIconSmall; break;
                case ActionType.NOTIFICATION_SENT : iconClass = Icons.greenInfoIconSmall; break;
                case ActionType.NOTIFICATION_ROUTE : iconClass = Icons.seledineInfoIconSmall; break;
                case ActionType.SERVICE_CALL : iconClass = Icons.redInfoIconSmall; break;


                default :
                    iconClass = Icons.greyInfoIconSmall;

            }

            var iconClass:Class;
            return iconClass;

        }

        /*override public function validateNow():void
         {

         super.validateNow();
         if (listData) y = listData.rowIndex * ( listData.owner as DataGrid ).rowHeight + 1;

         }*/


        private var _listData:BaseListData;
        public function get listData():BaseListData
        {
            return _listData;
        }

        public function set listData(value:BaseListData):void
        {
            _listData = value;

        }]]></fx:Script>
</Group>
