<?xml version="1.0"?>
<!--
  ~ Copyright (C) 2009 RafaÅ‚ Szemraj, ( http://szemraj.eu )
  ~
  ~ Tequila, The Ministry Of Ideas Co. Ltd.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<console:ConsoleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
                       xmlns:mx="library://ns.adobe.com/flex/mx"
                       xmlns:base="org.puremvc.as3.multicore.utilities.fabrication.console.view.components.base.*"
                       xmlns:inspect="org.puremvc.as3.multicore.utilities.fabrication.console.view.components.base.inspectdatagrid.*"
                       title="Log" width="700" height="500" resizable="true"
                       xmlns:console="org.puremvc.as3.multicore.utilities.fabrication.console.view.components.console.*">
    <s:VGroup width="100%" height="100%" horizontalAlign="left" paddingLeft="5" paddingTop="5" paddingRight="5"
              paddingBottom="5">
        <s:HGroup>
            <mx:Button label="clear" click="{debugArea.clear()}" enabled="{debugArea.htmlText.length > 0}"
                       useHandCursor="true" buttonMode="true"/>
            <mx:Button label="clear inspectPanel" click="{dataCollection = new ArrayCollection()}"
                       enabled="{dataCollection.length > 0}" useHandCursor="true" buttonMode="true"/>
            <mx:ComboBox change="{debugArea.outputLogLevel = filterSelection.selectedItem.value}" id="filterSelection"
                         rowCount="7" selectedIndex="0">
                <mx:dataProvider>
                    <fx:Object label="default" value="{LogLevel.DEFAULT}"/>
                    <fx:Object label="debug" value="{LogLevel.DEBUG}"/>
                    <fx:Object label="info" value="{LogLevel.INFO}"/>
                    <fx:Object label="warn" value="{LogLevel.WARN}"/>
                    <fx:Object label="error" value="{LogLevel.ERROR}"/>
                    <fx:Object label="fatal" value="{LogLevel.FATAL}"/>
                    <fx:Object label="none" value="{LogLevel.NONE}"/>
                </mx:dataProvider>
            </mx:ComboBox>
            <!--<mx:NumericStepper id="maxLinesValue" minimum="0" maximum="100" stepSize="1" value="0"
                               change="{debugArea.maxBufferLength = maxLinesValue.value}"/>-->
            <base:MyCheckBox label="always in front" selected="false" id="afSwitch"/>
        </s:HGroup>
        <mx:VDividedBox width="100%" height="100%" liveDragging="true">
            <console:OutputPanel id="debugArea" width="100%" height="200" editable="false" styleName="pixel"/>

            <inspect:InspectDataGrid styleName="propertyInspector" dataProvider="{dataCollection}" id="inspectPanel"
                                     width="100%" height="100%"/>
        </mx:VDividedBox>
    </s:VGroup>
    <fx:Script><![CDATA[
        import mx.collections.ArrayCollection;
        import mx.controls.CheckBox;

        import org.puremvc.as3.multicore.utilities.fabrication.console.utils.ObjectParser;
        import org.puremvc.as3.multicore.utilities.fabrication.logging.LogLevel;

        [Bindable]
        private var dataCollection:ArrayCollection = new ArrayCollection();

        private var objectParser:ObjectParser = new ObjectParser();


        public function logMessage(message:String, logLevel:LogLevel):void
        {
            debugArea.logMessage(message, logLevel);
        }

        public function inspectObject(object:Object, objectName:String):void
        {


            dataCollection.addItem(objectParser.buildDataObject(object, objectName));
            inspectPanel.dataProvider = dataCollection;
        }


        override public function get alwaysInFrontOfSwitch():CheckBox
        {
            return afSwitch;
        }


        ]]></fx:Script>
</console:ConsoleWindow>
